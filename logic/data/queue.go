// Code generated by tool/convert
// DO NOT EDIT!
package data

import (
	"sync/atomic"
	"unsafe"
)

type Queue struct {
	CgiConfig string

	ErrorCollectionEnable bool

	ErrorCollectionStorage string

	HttpConfig string

	QueueConfig string

	ShardId int

	Tags []string

	TagsMapping string

	TaskDebugEnable bool

	TaskDebugStorage string

	ConsumerDisable bool
}

var QueuePtr unsafe.Pointer = unsafe.Pointer(&Queue{})

func CurrentQueue() *Queue {
	return (*Queue)(atomic.LoadPointer(&QueuePtr))
}

func UpdateQueue(v *Queue) {
	atomic.StorePointer(&QueuePtr, unsafe.Pointer(v))
}
